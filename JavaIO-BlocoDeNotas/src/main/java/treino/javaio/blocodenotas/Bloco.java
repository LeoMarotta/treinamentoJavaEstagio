/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package treino.javaio.blocodenotas;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author leomarotta
 */
public class Bloco extends javax.swing.JFrame {

    private File arquivoAtual;
    
    /**
     * Creates new form Bloco
     */
    public Bloco() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Principal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPrincipal = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnArquivo = new javax.swing.JMenu();
        mnNovo = new javax.swing.JMenuItem();
        mnAbrir = new javax.swing.JMenuItem();
        mnSalvar = new javax.swing.JMenuItem();
        mnDeletar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bloco de Notas 2");

        txtPrincipal.setColumns(20);
        txtPrincipal.setRows(5);
        jScrollPane1.setViewportView(txtPrincipal);

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
        );

        mnArquivo.setText("Arquivo");

        mnNovo.setText("Novo");
        mnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNovoActionPerformed(evt);
            }
        });
        mnArquivo.add(mnNovo);

        mnAbrir.setText("Abrir");
        mnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAbrirActionPerformed(evt);
            }
        });
        mnArquivo.add(mnAbrir);

        mnSalvar.setText("Salvar");
        mnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSalvarActionPerformed(evt);
            }
        });
        mnArquivo.add(mnSalvar);

        mnDeletar.setText("Deletar");
        mnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDeletarActionPerformed(evt);
            }
        });
        mnArquivo.add(mnDeletar);

        jMenuBar1.add(mnArquivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNovoActionPerformed
        // TODO add your handling code here:
        txtPrincipal.setText("");
    }//GEN-LAST:event_mnNovoActionPerformed

    private void mnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAbrirActionPerformed
        // TODO add your handling code here:
       JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            arquivoAtual = fileChooser.getSelectedFile();

            try {
                String content = new String(Files.readAllBytes(Paths.get(arquivoAtual.getAbsolutePath())));
                txtPrincipal.setText(content);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao abrir o arquivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnAbrirActionPerformed

    private void mnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSalvarActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                FileWriter fw = new FileWriter(selectedFile);
                BufferedWriter bw = new BufferedWriter(fw);

                bw.write(txtPrincipal.getText());

                bw.close();
                fw.close();

                JOptionPane.showMessageDialog(this, "Arquivo salvo com sucesso!", "Salvo", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar o arquivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnSalvarActionPerformed

    private void mnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDeletarActionPerformed
        // TODO add your handling code here:
        if (arquivoAtual != null) {
            int option = JOptionPane.showConfirmDialog(this, "Tem certeza de que deseja deletar o arquivo?", "Deletar Arquivo", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                deletarArquivo();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum arquivo aberto para deletar.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        txtPrincipal.setText("");
    }//GEN-LAST:event_mnDeletarActionPerformed

    public void setTextAreaContent(String content) {
        txtPrincipal.setText(content);
    }

    private void deletarArquivo() {
        if (arquivoAtual != null) {
            try {
                Files.deleteIfExists(arquivoAtual.toPath());
                txtPrincipal.setText("");
                arquivoAtual = null; // Limpa a referÃªncia ao arquivo atual
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao deletar o arquivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bloco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bloco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bloco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bloco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bloco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Principal;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnAbrir;
    private javax.swing.JMenu mnArquivo;
    private javax.swing.JMenuItem mnDeletar;
    private javax.swing.JMenuItem mnNovo;
    private javax.swing.JMenuItem mnSalvar;
    private javax.swing.JTextArea txtPrincipal;
    // End of variables declaration//GEN-END:variables
}
